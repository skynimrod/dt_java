========================

例子:   nsh000001.gif,     可以通过 FireWork 来查看获得相关数据

1. 头部:  6字节

     47  49  46  38  39  61     GIF89a

2. 逻辑视屏描述块:   7字节 

     FA  00                     0x00FA = 250   宽 = 250 像素

     7D  00                     0x007D = 125   高 = 125 像素

     C2                         Packed Fields = 0xC2 = 11000010

                                    全局色表标志 = 1       表示 背景颜色索引字段的值将指向背景颜色表

                                    颜色方案     = 100     提供给原始图像的每个颜色的位数减1. 这个值代表图像中所使用的整个
                                                           调色板的大小, 而不是图像中所使用的颜色的数量. 例如, 若该字段的值
                                                           为4, 则图像中所使用的调色板的每个色值占5位. 

                                    短标志       = 0       全局色表 不 按照重要性递减的原则进行排序，即 不排序

                                    全局色表尺寸 = 010     全局色表占用的字节数

     00                         背景色索引  = 0      表示没有背景色

     00                         像素高宽比  = 0      表示没有比值
 
3. 全局色表   3 * 2 ^ (全局色表尺寸+1) 个字节 = 3 * 2 ^ 3 = 3 * 8 = 24  (由上面的全局色表尺寸决定大小)

   (1)  FD   FD   FD        253   253   253                    背景        白色

   (2)  7C   7C   7C        124   124   124                    网格色,     灰色

   (3)  00   00   00        0     0     0                      平均交易价, 黑色

   (4)  9B   9B   9B        155   155   155                    字的颜色,   较深灰色, 例如 sina.com

   (5)  B4   B4   B4        180   180   180                    坐标边框色, 很深灰色, 比上面的更深一点

   (6)  FC   04   04        252   4     4                      高于开盘的价位, 红色

   (7)  00   86   D2        0     134   210                    x坐标值, y坐标小于开盘价的值, 浅蓝色

   (8)  00   7C   C8        0     124   200                    分时线颜色,   天蓝色

4. 图像控制扩充 (版本 98a)   7个字节  ?? 好像是8个字节

       21             扩充导入符(引入符)  固定值为0x21, 用于识别一个扩充块的开始

       F9             图像控制标记,  识别当前块是否为图形控制扩充. 该字段为固定值 0xF9.

       04             块尺寸. 块中所包含的字节数。从块尺寸字段开始到快结束符（不含结束符）。该字段包含固定值4。

       01  00         延长时间. 0010  *1/100秒= 0.02秒延时

       00             透明颜色索引

       00             ?? Packed Field???

       00             结束符 . 0

5. 图像描述符      (这部分要参见 http://findingjob.blog.sohu.com/49926876.html 来分析)      10个字节   

       2C             图像分隔符.  用于识别图像描述符的开始, 固定值0x2C.

       00  00         图像左坐标.      unsigned   像素为单位

       00  00         图像顶坐标       unsigned   像素为单位

       FA  00         图像宽度         unsigned    0x00FA = 250 像素

       7D  00         图像高度         unsigned    0x007D = 125 像素

       00             包装域    0 0 0 00 000    0  局部色表   0 隔行处理标志  0 短标志   00   保留  000  局部色表尺寸

6. 基于表的图象数据

37h:   03             LZW 最小代码长度    , 后面的数据都是图像数据，由数据子块构成,  这个表示编码的数据位数是3位, 即3个像素.

                      在本GIF文件中表示有3种颜色. 

       数据子块1 :

38H    FE             数据子块长度            0xFE = 254

39H    08  BA  DC  FE  30  CA  49  ... ...  C0  60  D1  0A  C5  21  E8   ( 至 E8 是136H )        8 bit 的数据(byte)        

-136H    共254字节

       数据子块2 :

137H   FE             数据子块长度            0xFE = 254

138H-235H   共254字节

       数据子块3 :

236H   FE                   数据子块长度            0xFE = 254

237H-334H   共254字节

       数据子块4 :
 
335H   FE                           数据子块长度            0xFE = 254

336H-433H   共254字节

       数据子块5 :
 
434H   FE                           数据子块长度            0xFE = 254

435H-532H   共254字节

       数据子块6 :
 
533H   FE                           数据子块长度            0xFE = 254

534H-631H   共254字节

       数据子块7 :
 
632H   FE                           数据子块长度            0xFE = 254

633H-730H   共254字节

       数据子块8 :
 
731H   FE                           数据子块长度            0xFE = 254

732H-829H   共254字节

       数据子块9 :
 
830H   2F                           数据子块长度            0x2F = 47

831H-859H   共47字节

      数据子块10 :

860H   00                          数据结束标志

==============================================

7. 尾记录

861H    0x3B                该块为一个单字段块, 用来指示该数据流的结束. 取固定值 0x3b.

     
. 用Java 创建GIF 的过程

 1. 选用画图类

    Graphics

 2. 创建画布, 画出边框, 坐标值 

    
 3. 输出GIF 图像数据, 然后用LZW 算法压缩
       
